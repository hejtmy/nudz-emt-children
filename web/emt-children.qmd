---
title: "VR Children EMT test Reports"
format: html
---

```{r setup, echo=FALSE, warning=FALSE, message=FALSE, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning=FALSE)
library(tidyverse)
library(gt)
here::i_am("web/emt-children.qmd")
```

```{r loading, message=FALSE, warning=FALSE}
# loads df_vr and df_all dataframes
source(here::here("scripts/loading-children.R"))

df_all_unfiltered <- df_all
df_vr_unfiltered <- df_vr

df_vr <- df_vr %>%
  filter(!(error_type %in% c("total_error", "incorrect_location_order")))

df_all <- df_all %>%
  filter(!(error_type %in% c("total_error", "incorrect_location_order")))

# Adding total error -----
df_all <- df_all %>%
  group_by(error_type, name, age_month) %>%
  summarise(all_trials_error = sum(error_value),
            all_trials_avg_relative_error = sum(relative_error_value)/3,
            all_trials_avg_relative_correct = 1 - all_trials_avg_relative_error) %>%
  ungroup() %>%
  right_join(df_all, by = c("name", "age_month", "error_type"))
  # convert the all trials error column to a row with difficulty set to 99

df_vr <- df_vr %>%
  group_by(error_type, name, age_month) %>%
  summarise(all_trials_error = sum(error_value),
            all_trials_avg_relative_error = sum(relative_error_value)/3,
            all_trials_avg_relative_correct = 1 - all_trials_avg_relative_error) %>%
  ungroup() %>%
  right_join(df_vr, by = c("name", "age_month", "error_type"))
```

## Sample descriptives

```{r}
df_single <- df_all %>%
  group_by(name, school) %>%
  slice_head(n = 1) %>%
  ungroup()
```

A total of `r nrow(df_single)` children participated in the study. The average age was `r round(mean(df_single$age_month), 2)` months (SD = `r round(sd(df_single$age_month), 2)`, Min = `r min(df_single$age_month)`, Max = `r max(df_single$age_month)`). Children were recruited from `r n_distinct(df_single$school)` schools.

### Removing the object location error

To simplify theoutput, we decided to keep only the object location error, as the object location and objec torder are heavilly correlated anyways

```{r object location order error corr, message = FALSE}
df_location_object_error <- df_vr_unfiltered %>%
  filter(error_type %in% c("incorrect_location_order", "incorrect_object_order")) %>%
  select(-c(relative_error_value, made_error)) %>%
  pivot_wider(names_from = error_type, values_from = error_value)

df_location_object_error %>%
  ggplot(aes(incorrect_location_order, incorrect_object_order)) +
    geom_jitter() +
    geom_smooth(method = "lm") +
    labs(x = "Incorrect location order error", y = "Incorrect object order error", 
         title = "Correlation between incorrect location order error and incorrect object order error")

report::report(cor.test(df_location_object_error$incorrect_location_order, df_location_object_error$incorrect_object_order, 
method = "kendall"))
```

## Descriptives

```{r}
knitr::kable(head(df_vr, 3))
```

```{r}
df_vr %>%
  select(name, age_months, gender) %>%
  distinct() %>%
  ggplot(aes(age_months, fill = gender)) +
    geom_histogram(binwidth = 3) + 
    labs(x = "Age (months)", y = "Count", 
    title = "Age distribution of participants")
```

### Errors 

::: {.callout-tip}

CO = correct objects/správné předměty resp. Jejich Chyby (už přepočítáno)

OPE = object position errors/chyby v pozici

OOE = object order errors/chyby v pořadí předmětu

LOE = location order errors/chyby v pořadí pozice
:::

These errors were renamed to a bit clearer naming schemes to prevent OOE, OPE etc.

::: {.callout-tip}
The errors come in four different types:

- selection error: the participant selected the wrong item

- incorrect_placement: the participant placed the item at a wrong position

- incorrect_object_order: the participant placed the item at a wrong order

- incorrect_location_order: the participant placed the item at a location in a wrong order?
:::

```{r error descriptives, echo = FALSE, message = FALSE}
ls_analysis <- list(mean = mean, sd = sd, min = min, 
                    max = max, median = median,
                    sd_mean = ~sd(.x)/sqrt(n()))

df_error_desc <- df_vr %>%
  group_by(difficulty, error_type) %>%
  summarise(across(error_value, .fns = ls_analysis, .names = "{.fn}"))

df_rel_error_desc <- df_vr %>%
  group_by(difficulty, error_type) %>%
  summarise(across(relative_error_value, ls_analysis, .names = "{.fn}"))

df_rel_corr_desc <- df_vr %>%
  group_by(difficulty, error_type) %>%
  summarise(across(relative_correct, ls_analysis, .names = "{.fn}"))

df_error_desc %>%
  select(-sd_mean) %>%
  gt() %>%
    tab_header(title = "Descriptives of error values in different difficulties and error types") %>%
    fmt_number(columns = where(is.numeric), decimals = 2)
```

## Difficulty and accuracy

```{r error descriptives plot}
df_error_desc %>%
  ggplot(aes(difficulty, mean, fill = error_type)) +
  geom_col(position = "dodge") +
  geom_errorbar(aes(ymin = mean - sd_mean, ymax = mean + sd_mean), 
                position = position_dodge(width = 0.9), width = 0.25) +
  labs(x = "Difficulty", y = "Mean error value",
       title = "Mean accuracy values in different difficulties and error types")
```

### Relative accuracy/error

As there is a difference in the potential number of errors possible at different difficulties, we also calculated the relative relative accuracy (1 - errors/max posibble errors), so the number 1 means the best possible performance.

```{r error relative descriptives plot}
df_rel_corr_desc %>%
  ggplot(aes(error_type, mean, fill = factor(difficulty))) +
  geom_col(position = "dodge") +
  geom_errorbar(aes(ymin = mean - sd_mean, ymax = mean + sd_mean), 
                position = position_dodge(width = 0.9), width = 0.25) +
  labs(x = "Error Type", y = "Mean relative accuracy value",
       title = "Mean relative accuracy values in different difficulties and error types",
       fill = "Difficulty") +
  #make the x labels 45 degrees
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

So it looks like increasing number of items decreases performance. The selection seems to be relatively stable, but the object order had more thn half the errors in the 5 items difficulty.

::: {.callout-warning}
Just to remind, if one location is incorrect, then more locations will be incorrect after that, as the participant will not be able to place the objects correctly. This will overestimate the number of errors in later trials, as the errors are not independent and it is almost impossible to do "just one error" in the order of objects. Selection and placement are independent from one item to another.
:::

## VR test results in different ages

```{r different ages and difficulties plot}
ggplot(df_vr, aes(age_months, relative_correct, color = gender)) +
  geom_point() +
  facet_grid(rows = vars(difficulty), cols = vars(error_type), scales = "free_y") +
  geom_smooth(method = "lm") +
  labs(x = "Age (months)", y = "Relative accuracy (1 - error / difficulty)", 
       title = "Relative accuracy in individual error types and difficulties")
```

Overall there seems to be a trend of older children to make more mistakes and have lower accuracy, especially in the 4 items difficutly. But the effect seems to be limited to men.

```{r different ages all trials averaged}
df_vr %>%
  group_by(name, error_type) %>%
  slice_head(n = 1) %>%
  ggplot(aes(age_months, all_trials_avg_relative_correct, color = gender)) +
  geom_point() +
  facet_grid(cols = vars(error_type), scales = "free_y") +
  geom_smooth(method = "lm") +
  labs(x = "Age (months)", y = "Average relative accuracy value (1 - error / difficulty)", 
       title = "Relative accuracy in individual error types averaged for all trials")
```

```{r, results = "asis"}
lmer_rel_age_diff <- lmerTest::lmer(relative_correct ~ age_months + difficulty + (1|name), data = df_vr)
report(lmer_rel_age_diff)
```

:::{.callout-note}
There are a few possible explanations

- The data are missing the time component, so we do not kno how long it actually took the children to answer or how much they moved in the environemnt

- It is possible, that the researcher might have been more supportive with the younger children

- Finally, it is possible that the researcher might have removed the cognitive load for the task for the young children (as is suggested in the thesis, that the reearcher kept helping children unable to control the environment on their own), but information about whom has been helped is missing.
:::

### Total error

```{r}
df_vr %>%
  distinct(name, age_months, all_trials_avg_relative_correct, error_type, gender) %>%
  ggplot(aes(age_months, all_trials_avg_relative_correct, color = gender)) +
  geom_point() +
  geom_smooth(method = "lm") +
  facet_wrap(~error_type, scales = "free") +
  labs(x = "Age (months)", y = "Relative accuracy value (1 - error / difficulty)", 
       title = "Relative accuracy in all trials")
```

## Correlation with other metrics

### Story repetition

Maximum points is 40 for the story repetition and 34 for the sentence repetition. Higher score is better.

```{r story repetition score plot, warning=FALSE}
df_all %>%
  ggplot(aes(relative_correct, NR)) +
  geom_point() +
    geom_smooth(method = "lm") +
    facet_grid(rows = vars(difficulty), cols = vars(error_type), scales = "free") + 
    labs(x = "Relative accuracy", y = "Story repetition score", 
        title = "Repation between error value and story repetition score. Split by difficulty")

df_all %>%
  group_by(name, error_type) %>%
  slice_head(n = 1) %>%
  ggplot(aes(all_trials_avg_relative_correct, NR)) +
  geom_point() +
    geom_smooth(method = "lm") +
    facet_wrap(~error_type, scales = "free") +
    labs(x = "Relative accuracy", y = "Story repetition score", 
            title = "Relationship between error value and story repetition score for all trials")
```

```{r story repetition score}
df_all %>%
  group_by(error_type) %>%
  group_modify(~broom::tidy(cor.test(.$NR, .$relative_correct, method = "spearman"))) %>%
  select(estimate, statistic, p.value) %>%
  mutate(p.value = papaja::apa_p(p.adjust(p.value))) %>%
  ungroup() %>%
  gt() %>%
    tab_header(title = "Correlation between relative accuracy and story repetition score",
      subtitle = "Spearman correlation ") %>%
    fmt_number(columns = where(is.numeric), decimals = 2) %>%
    # add footnote corrected for mutliple comparisons to the header
    tab_footnote(
      footnote = "Corrected for multiple comparisons using FDR method",
      locations = cells_column_labels(vars(p.value))
    )
```

```{r story repetition score separated by difficulty}
df_all %>%
  group_by(error_type, difficulty) %>%
  group_modify(~broom::tidy(cor.test(.$NR, .$error_value, method = "spearman"))) %>%
  select(estimate, statistic, p.value) %>%
  mutate(p.value = papaja::apa_p(p.adjust(p.value))) %>%
  ungroup() %>%
  gt() %>%
    tab_header(title = "Correlation between error value and story repetition score",
      subtitle = "Spearman correlation between error value and story repetition score for each error type") %>%
    fmt_number(columns = where(is.numeric), decimals = 2) %>%
    # add footnote corrected for mutliple comparisons to the header
    tab_footnote(
      footnote = "Corrected for multiple comparisons using FDR method",
      locations = cells_column_labels(vars(p.value))
    )
```

### Sentence repetition

```{r sentence repetition score plot, warning=FALSE}
df_all %>%
  ggplot(aes(relative_correct, SR)) +
  geom_point() +
    geom_smooth(method = "lm") +
  facet_grid(rows = vars(difficulty), cols = vars(error_type), scales = "free") + 
    labs(x = "Relative accuracy", y = "Stentence repetition score", 
         title = "Relationship between error value and sentence repetition score. Split by difficulty")

df_all %>%
  group_by(name, error_type) %>%
  slice_head(n = 1) %>%
  ggplot(aes(all_trials_avg_relative_correct, SR)) +
  geom_point() +
    geom_smooth(method = "lm") +
    facet_wrap(~error_type, scales = "free") +
    labs(x = "Relative accuracy", y = "Sentence repetition score", 
         title = "Relationship between average relative accuracy and sentence repetition score for all trials")
```

```{r sentence repetition score}
df_all %>%
  group_by(error_type) %>%
  group_modify(~broom::tidy(cor.test(.$SR, .$relative_correct, method = "spearman"))) %>%
  select(estimate, statistic, p.value) %>%
  mutate(p.value = papaja::apa_p(p.adjust(p.value))) %>%
  ungroup() %>%
  gt() %>%
    tab_header(title = "Correlation between relative accuracy and sentence repetition score",
               subtitle = "Spearman correlation") %>%
    fmt_number(columns = where(is.numeric), decimals = 2) %>%
    # add footnote corrected for mutliple comparisons to the header
    tab_footnote(
      footnote = "Corrected for multiple comparisons using FDR method",
      locations = cells_column_labels(c(p.value))
    )
```

```{r sentence repetition score separated by difficulty}
df_all %>%
  group_by(error_type, difficulty) %>%
  group_modify(~broom::tidy(cor.test(.$SR, .$relative_correct, method = "spearman"))) %>%
  select(estimate, statistic, p.value) %>%
  mutate(p.value = papaja::apa_p(p.adjust(p.value))) %>%
  ungroup() %>%
  gt() %>%
    tab_header(title = "Correlation between relative accuracy value and sentence repetition score",
      subtitle = "Spearman correlation b") %>%
    fmt_number(columns = where(is.numeric), decimals = 2) %>%
    # add footnote corrected for mutliple comparisons to the header
    tab_footnote(
      footnote = "Corrected for multiple comparisons using FDR method",
      locations = cells_column_labels(c(p.value))
    )
```

## Comparing adults in house

```{r loading adults data}
source(here::here("scripts/loading-adults.R"), encoding = "UTF-8")
df_adults <- df_emt_adults %>%
  filter(Environment == "House", difficulty == 5)
```

```{r merging children and adults data}
df_combined <- df_adults %>%
 select(error_type, error_value = errors, relative_error_value,
        ID = bindingid) %>%
 mutate(group = "Adults") %>%
  bind_rows(df_vr %>%
    filter(difficulty == 5, error_type != "selection") %>%
    select(error_type, error_value, relative_error_value, ID = name) %>%
    mutate(group = "Children", 
            # replace inbcorrect object order in column error_type with incorrect location order)
            error_type = case_match(error_type, 
                    "incorrect_object_order" ~ "incorrect_order", .default = error_type)))
```

```{r comparison adults children descriptives}
df_combined %>%
  group_by(group, error_type) %>%
  summarise(report_val = str_glue("{round(mean(error_value), 3)} ({round(sd(error_value), 3)})")) %>%
  pivot_wider(names_from = group, values_from = report_val) %>%
  gt() %>%
    tab_header(title = "Descriptives of error values in adults and children in different error types",
      subtitle = "Mean (SD)")
```

```{r comparison adults children plots}
df_combined %>%
  ggplot(aes(group, error_value, fill = group)) +
    geom_boxplot() +
    facet_wrap(~error_type, scales = "free") +
    labs(x = "Group", y = "Error value", 
            title = "Error value in adults and children in different error types")
```

```{r comparison adults children test}
df_combined %>%
  group_by(error_type) %>%
  group_modify(~broom::tidy(t.test(error_value ~ group, data = .))) %>%
  select(-method, -alternative) %>%
  knitr::kable()
```

## Loading seniors

```{r loading seniors}
source(here::here("scripts/loading-seniors.R"), encoding = "UTF-8")
df_seniors <- df_seniors %>%
  filter(Form == "desktop", difficulty == 3)
```

```{r}
df_children_seniors <- df_seniors %>%
 select(error_type = measure, error_value = value, ID) %>%
 filter(error_type %in% c("incorrect_object_order", "incorrect_placement", "selection")) %>%
 mutate(group = "Seniors") %>%
  bind_rows(df_vr %>%
    filter(difficulty == 3) %>%
    select(error_type, error_value, ID = name) %>%
    mutate(group = "Children"))
```

```{r}
df_children_seniors %>%
  group_by(group, error_type) %>%
  summarise(report_val = str_glue("{round(mean(error_value), 3)} ({round(sd(error_value), 3)})")) %>%
  pivot_wider(names_from = group, values_from = report_val) %>%
  gt() %>%
    tab_header(title = "Descriptives of error values in adults and children in 3 item difficulty",
      subtitle = "Mean (SD)")
```